/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.java.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class IotData extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7802622636143449372L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"IotData\",\"namespace\":\"com.java.avro\",\"fields\":[{\"name\":\"vehicleId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"vehicleId\"},{\"name\":\"vehicleType\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"vehicleType\"},{\"name\":\"plate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"plate\"},{\"name\":\"routeId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"routeId\"},{\"name\":\"longitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"longitude\"},{\"name\":\"latitude\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"latitude\"},{\"name\":\"timestamp\",\"type\":\"long\",\"doc\":\"timestamp\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"speed\",\"type\":\"double\",\"doc\":\"speed\"},{\"name\":\"adr\",\"type\":\"boolean\",\"doc\":\"adr\"},{\"name\":\"portal\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"portal\"}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<IotData> ENCODER =
      new BinaryMessageEncoder<IotData>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<IotData> DECODER =
      new BinaryMessageDecoder<IotData>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<IotData> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<IotData> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<IotData> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<IotData>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this IotData to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a IotData from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a IotData instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static IotData fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** vehicleId */
  @Deprecated public java.lang.String vehicleId;
  /** vehicleType */
  @Deprecated public java.lang.String vehicleType;
  /** plate */
  @Deprecated public java.lang.String plate;
  /** routeId */
  @Deprecated public java.lang.String routeId;
  /** longitude */
  @Deprecated public java.lang.String longitude;
  /** latitude */
  @Deprecated public java.lang.String latitude;
  /** timestamp */
  @Deprecated public long timestamp;
  /** speed */
  @Deprecated public double speed;
  /** adr */
  @Deprecated public boolean adr;
  /** portal */
  @Deprecated public java.lang.String portal;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public IotData() {}

  /**
   * All-args constructor.
   * @param vehicleId vehicleId
   * @param vehicleType vehicleType
   * @param plate plate
   * @param routeId routeId
   * @param longitude longitude
   * @param latitude latitude
   * @param timestamp timestamp
   * @param speed speed
   * @param adr adr
   * @param portal portal
   */
  public IotData(java.lang.String vehicleId, java.lang.String vehicleType, java.lang.String plate, java.lang.String routeId, java.lang.String longitude, java.lang.String latitude, java.lang.Long timestamp, java.lang.Double speed, java.lang.Boolean adr, java.lang.String portal) {
    this.vehicleId = vehicleId;
    this.vehicleType = vehicleType;
    this.plate = plate;
    this.routeId = routeId;
    this.longitude = longitude;
    this.latitude = latitude;
    this.timestamp = timestamp;
    this.speed = speed;
    this.adr = adr;
    this.portal = portal;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return vehicleId;
    case 1: return vehicleType;
    case 2: return plate;
    case 3: return routeId;
    case 4: return longitude;
    case 5: return latitude;
    case 6: return timestamp;
    case 7: return speed;
    case 8: return adr;
    case 9: return portal;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: vehicleId = value$ != null ? value$.toString() : null; break;
    case 1: vehicleType = value$ != null ? value$.toString() : null; break;
    case 2: plate = value$ != null ? value$.toString() : null; break;
    case 3: routeId = value$ != null ? value$.toString() : null; break;
    case 4: longitude = value$ != null ? value$.toString() : null; break;
    case 5: latitude = value$ != null ? value$.toString() : null; break;
    case 6: timestamp = (java.lang.Long)value$; break;
    case 7: speed = (java.lang.Double)value$; break;
    case 8: adr = (java.lang.Boolean)value$; break;
    case 9: portal = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'vehicleId' field.
   * @return vehicleId
   */
  public java.lang.String getVehicleId() {
    return vehicleId;
  }


  /**
   * Sets the value of the 'vehicleId' field.
   * vehicleId
   * @param value the value to set.
   */
  public void setVehicleId(java.lang.String value) {
    this.vehicleId = value;
  }

  /**
   * Gets the value of the 'vehicleType' field.
   * @return vehicleType
   */
  public java.lang.String getVehicleType() {
    return vehicleType;
  }


  /**
   * Sets the value of the 'vehicleType' field.
   * vehicleType
   * @param value the value to set.
   */
  public void setVehicleType(java.lang.String value) {
    this.vehicleType = value;
  }

  /**
   * Gets the value of the 'plate' field.
   * @return plate
   */
  public java.lang.String getPlate() {
    return plate;
  }


  /**
   * Sets the value of the 'plate' field.
   * plate
   * @param value the value to set.
   */
  public void setPlate(java.lang.String value) {
    this.plate = value;
  }

  /**
   * Gets the value of the 'routeId' field.
   * @return routeId
   */
  public java.lang.String getRouteId() {
    return routeId;
  }


  /**
   * Sets the value of the 'routeId' field.
   * routeId
   * @param value the value to set.
   */
  public void setRouteId(java.lang.String value) {
    this.routeId = value;
  }

  /**
   * Gets the value of the 'longitude' field.
   * @return longitude
   */
  public java.lang.String getLongitude() {
    return longitude;
  }


  /**
   * Sets the value of the 'longitude' field.
   * longitude
   * @param value the value to set.
   */
  public void setLongitude(java.lang.String value) {
    this.longitude = value;
  }

  /**
   * Gets the value of the 'latitude' field.
   * @return latitude
   */
  public java.lang.String getLatitude() {
    return latitude;
  }


  /**
   * Sets the value of the 'latitude' field.
   * latitude
   * @param value the value to set.
   */
  public void setLatitude(java.lang.String value) {
    this.latitude = value;
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return timestamp
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * timestamp
   * @param value the value to set.
   */
  public void setTimestamp(long value) {
    this.timestamp = value;
  }

  /**
   * Gets the value of the 'speed' field.
   * @return speed
   */
  public double getSpeed() {
    return speed;
  }


  /**
   * Sets the value of the 'speed' field.
   * speed
   * @param value the value to set.
   */
  public void setSpeed(double value) {
    this.speed = value;
  }

  /**
   * Gets the value of the 'adr' field.
   * @return adr
   */
  public boolean getAdr() {
    return adr;
  }


  /**
   * Sets the value of the 'adr' field.
   * adr
   * @param value the value to set.
   */
  public void setAdr(boolean value) {
    this.adr = value;
  }

  /**
   * Gets the value of the 'portal' field.
   * @return portal
   */
  public java.lang.String getPortal() {
    return portal;
  }


  /**
   * Sets the value of the 'portal' field.
   * portal
   * @param value the value to set.
   */
  public void setPortal(java.lang.String value) {
    this.portal = value;
  }

  /**
   * Creates a new IotData RecordBuilder.
   * @return A new IotData RecordBuilder
   */
  public static com.java.avro.IotData.Builder newBuilder() {
    return new com.java.avro.IotData.Builder();
  }

  /**
   * Creates a new IotData RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new IotData RecordBuilder
   */
  public static com.java.avro.IotData.Builder newBuilder(com.java.avro.IotData.Builder other) {
    if (other == null) {
      return new com.java.avro.IotData.Builder();
    } else {
      return new com.java.avro.IotData.Builder(other);
    }
  }

  /**
   * Creates a new IotData RecordBuilder by copying an existing IotData instance.
   * @param other The existing instance to copy.
   * @return A new IotData RecordBuilder
   */
  public static com.java.avro.IotData.Builder newBuilder(com.java.avro.IotData other) {
    if (other == null) {
      return new com.java.avro.IotData.Builder();
    } else {
      return new com.java.avro.IotData.Builder(other);
    }
  }

  /**
   * RecordBuilder for IotData instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<IotData>
    implements org.apache.avro.data.RecordBuilder<IotData> {

    /** vehicleId */
    private java.lang.String vehicleId;
    /** vehicleType */
    private java.lang.String vehicleType;
    /** plate */
    private java.lang.String plate;
    /** routeId */
    private java.lang.String routeId;
    /** longitude */
    private java.lang.String longitude;
    /** latitude */
    private java.lang.String latitude;
    /** timestamp */
    private long timestamp;
    /** speed */
    private double speed;
    /** adr */
    private boolean adr;
    /** portal */
    private java.lang.String portal;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.java.avro.IotData.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[0].schema(), other.vehicleId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[1].schema(), other.vehicleType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.plate)) {
        this.plate = data().deepCopy(fields()[2].schema(), other.plate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.routeId)) {
        this.routeId = data().deepCopy(fields()[3].schema(), other.routeId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.longitude)) {
        this.longitude = data().deepCopy(fields()[4].schema(), other.longitude);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.latitude)) {
        this.latitude = data().deepCopy(fields()[5].schema(), other.latitude);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.speed)) {
        this.speed = data().deepCopy(fields()[7].schema(), other.speed);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.adr)) {
        this.adr = data().deepCopy(fields()[8].schema(), other.adr);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.portal)) {
        this.portal = data().deepCopy(fields()[9].schema(), other.portal);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing IotData instance
     * @param other The existing instance to copy.
     */
    private Builder(com.java.avro.IotData other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.vehicleId)) {
        this.vehicleId = data().deepCopy(fields()[0].schema(), other.vehicleId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.vehicleType)) {
        this.vehicleType = data().deepCopy(fields()[1].schema(), other.vehicleType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.plate)) {
        this.plate = data().deepCopy(fields()[2].schema(), other.plate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.routeId)) {
        this.routeId = data().deepCopy(fields()[3].schema(), other.routeId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.longitude)) {
        this.longitude = data().deepCopy(fields()[4].schema(), other.longitude);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.latitude)) {
        this.latitude = data().deepCopy(fields()[5].schema(), other.latitude);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[6].schema(), other.timestamp);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.speed)) {
        this.speed = data().deepCopy(fields()[7].schema(), other.speed);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.adr)) {
        this.adr = data().deepCopy(fields()[8].schema(), other.adr);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.portal)) {
        this.portal = data().deepCopy(fields()[9].schema(), other.portal);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'vehicleId' field.
      * vehicleId
      * @return The value.
      */
    public java.lang.String getVehicleId() {
      return vehicleId;
    }


    /**
      * Sets the value of the 'vehicleId' field.
      * vehicleId
      * @param value The value of 'vehicleId'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setVehicleId(java.lang.String value) {
      validate(fields()[0], value);
      this.vehicleId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleId' field has been set.
      * vehicleId
      * @return True if the 'vehicleId' field has been set, false otherwise.
      */
    public boolean hasVehicleId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'vehicleId' field.
      * vehicleId
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearVehicleId() {
      vehicleId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'vehicleType' field.
      * vehicleType
      * @return The value.
      */
    public java.lang.String getVehicleType() {
      return vehicleType;
    }


    /**
      * Sets the value of the 'vehicleType' field.
      * vehicleType
      * @param value The value of 'vehicleType'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setVehicleType(java.lang.String value) {
      validate(fields()[1], value);
      this.vehicleType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'vehicleType' field has been set.
      * vehicleType
      * @return True if the 'vehicleType' field has been set, false otherwise.
      */
    public boolean hasVehicleType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'vehicleType' field.
      * vehicleType
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearVehicleType() {
      vehicleType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'plate' field.
      * plate
      * @return The value.
      */
    public java.lang.String getPlate() {
      return plate;
    }


    /**
      * Sets the value of the 'plate' field.
      * plate
      * @param value The value of 'plate'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setPlate(java.lang.String value) {
      validate(fields()[2], value);
      this.plate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'plate' field has been set.
      * plate
      * @return True if the 'plate' field has been set, false otherwise.
      */
    public boolean hasPlate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'plate' field.
      * plate
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearPlate() {
      plate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'routeId' field.
      * routeId
      * @return The value.
      */
    public java.lang.String getRouteId() {
      return routeId;
    }


    /**
      * Sets the value of the 'routeId' field.
      * routeId
      * @param value The value of 'routeId'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setRouteId(java.lang.String value) {
      validate(fields()[3], value);
      this.routeId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'routeId' field has been set.
      * routeId
      * @return True if the 'routeId' field has been set, false otherwise.
      */
    public boolean hasRouteId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'routeId' field.
      * routeId
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearRouteId() {
      routeId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'longitude' field.
      * longitude
      * @return The value.
      */
    public java.lang.String getLongitude() {
      return longitude;
    }


    /**
      * Sets the value of the 'longitude' field.
      * longitude
      * @param value The value of 'longitude'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setLongitude(java.lang.String value) {
      validate(fields()[4], value);
      this.longitude = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'longitude' field has been set.
      * longitude
      * @return True if the 'longitude' field has been set, false otherwise.
      */
    public boolean hasLongitude() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'longitude' field.
      * longitude
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearLongitude() {
      longitude = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'latitude' field.
      * latitude
      * @return The value.
      */
    public java.lang.String getLatitude() {
      return latitude;
    }


    /**
      * Sets the value of the 'latitude' field.
      * latitude
      * @param value The value of 'latitude'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setLatitude(java.lang.String value) {
      validate(fields()[5], value);
      this.latitude = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'latitude' field has been set.
      * latitude
      * @return True if the 'latitude' field has been set, false otherwise.
      */
    public boolean hasLatitude() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'latitude' field.
      * latitude
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearLatitude() {
      latitude = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'timestamp' field.
      * timestamp
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * timestamp
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setTimestamp(long value) {
      validate(fields()[6], value);
      this.timestamp = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * timestamp
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * timestamp
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearTimestamp() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'speed' field.
      * speed
      * @return The value.
      */
    public double getSpeed() {
      return speed;
    }


    /**
      * Sets the value of the 'speed' field.
      * speed
      * @param value The value of 'speed'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setSpeed(double value) {
      validate(fields()[7], value);
      this.speed = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'speed' field has been set.
      * speed
      * @return True if the 'speed' field has been set, false otherwise.
      */
    public boolean hasSpeed() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'speed' field.
      * speed
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearSpeed() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'adr' field.
      * adr
      * @return The value.
      */
    public boolean getAdr() {
      return adr;
    }


    /**
      * Sets the value of the 'adr' field.
      * adr
      * @param value The value of 'adr'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setAdr(boolean value) {
      validate(fields()[8], value);
      this.adr = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'adr' field has been set.
      * adr
      * @return True if the 'adr' field has been set, false otherwise.
      */
    public boolean hasAdr() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'adr' field.
      * adr
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearAdr() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'portal' field.
      * portal
      * @return The value.
      */
    public java.lang.String getPortal() {
      return portal;
    }


    /**
      * Sets the value of the 'portal' field.
      * portal
      * @param value The value of 'portal'.
      * @return This builder.
      */
    public com.java.avro.IotData.Builder setPortal(java.lang.String value) {
      validate(fields()[9], value);
      this.portal = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'portal' field has been set.
      * portal
      * @return True if the 'portal' field has been set, false otherwise.
      */
    public boolean hasPortal() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'portal' field.
      * portal
      * @return This builder.
      */
    public com.java.avro.IotData.Builder clearPortal() {
      portal = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public IotData build() {
      try {
        IotData record = new IotData();
        record.vehicleId = fieldSetFlags()[0] ? this.vehicleId : (java.lang.String) defaultValue(fields()[0]);
        record.vehicleType = fieldSetFlags()[1] ? this.vehicleType : (java.lang.String) defaultValue(fields()[1]);
        record.plate = fieldSetFlags()[2] ? this.plate : (java.lang.String) defaultValue(fields()[2]);
        record.routeId = fieldSetFlags()[3] ? this.routeId : (java.lang.String) defaultValue(fields()[3]);
        record.longitude = fieldSetFlags()[4] ? this.longitude : (java.lang.String) defaultValue(fields()[4]);
        record.latitude = fieldSetFlags()[5] ? this.latitude : (java.lang.String) defaultValue(fields()[5]);
        record.timestamp = fieldSetFlags()[6] ? this.timestamp : (java.lang.Long) defaultValue(fields()[6]);
        record.speed = fieldSetFlags()[7] ? this.speed : (java.lang.Double) defaultValue(fields()[7]);
        record.adr = fieldSetFlags()[8] ? this.adr : (java.lang.Boolean) defaultValue(fields()[8]);
        record.portal = fieldSetFlags()[9] ? this.portal : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<IotData>
    WRITER$ = (org.apache.avro.io.DatumWriter<IotData>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<IotData>
    READER$ = (org.apache.avro.io.DatumReader<IotData>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.vehicleId);

    out.writeString(this.vehicleType);

    out.writeString(this.plate);

    out.writeString(this.routeId);

    out.writeString(this.longitude);

    out.writeString(this.latitude);

    out.writeLong(this.timestamp);

    out.writeDouble(this.speed);

    out.writeBoolean(this.adr);

    out.writeString(this.portal);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.vehicleId = in.readString();

      this.vehicleType = in.readString();

      this.plate = in.readString();

      this.routeId = in.readString();

      this.longitude = in.readString();

      this.latitude = in.readString();

      this.timestamp = in.readLong();

      this.speed = in.readDouble();

      this.adr = in.readBoolean();

      this.portal = in.readString();

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.vehicleId = in.readString();
          break;

        case 1:
          this.vehicleType = in.readString();
          break;

        case 2:
          this.plate = in.readString();
          break;

        case 3:
          this.routeId = in.readString();
          break;

        case 4:
          this.longitude = in.readString();
          break;

        case 5:
          this.latitude = in.readString();
          break;

        case 6:
          this.timestamp = in.readLong();
          break;

        case 7:
          this.speed = in.readDouble();
          break;

        case 8:
          this.adr = in.readBoolean();
          break;

        case 9:
          this.portal = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










