/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.java.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TrafficStatistic extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8790620398164785361L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TrafficStatistic\",\"namespace\":\"com.java.avro\",\"fields\":[{\"name\":\"allTraffic\",\"type\":\"long\",\"doc\":\"allTraffic\",\"default\":0},{\"name\":\"adr\",\"type\":\"long\",\"doc\":\"adr\",\"default\":0},{\"name\":\"notAdr\",\"type\":\"long\",\"doc\":\"notAdr\",\"default\":0},{\"name\":\"largeTruck\",\"type\":\"long\",\"doc\":\"largeTruck\",\"default\":0},{\"name\":\"smallTruck\",\"type\":\"long\",\"doc\":\"smallTruck\",\"default\":0},{\"name\":\"bus\",\"type\":\"long\",\"doc\":\"bus\",\"default\":0},{\"name\":\"taxi\",\"type\":\"long\",\"doc\":\"taxi\",\"default\":0},{\"name\":\"privateCar\",\"type\":\"long\",\"doc\":\"privateCar\",\"default\":0},{\"name\":\"route37\",\"type\":\"long\",\"doc\":\"route37\",\"default\":0},{\"name\":\"route43\",\"type\":\"long\",\"doc\":\"route43\",\"default\":0},{\"name\":\"route82\",\"type\":\"long\",\"doc\":\"route82\",\"default\":0}],\"version\":\"1\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TrafficStatistic> ENCODER =
      new BinaryMessageEncoder<TrafficStatistic>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TrafficStatistic> DECODER =
      new BinaryMessageDecoder<TrafficStatistic>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TrafficStatistic> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TrafficStatistic> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TrafficStatistic> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TrafficStatistic>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TrafficStatistic to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TrafficStatistic from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TrafficStatistic instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TrafficStatistic fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** allTraffic */
  @Deprecated public long allTraffic;
  /** adr */
  @Deprecated public long adr;
  /** notAdr */
  @Deprecated public long notAdr;
  /** largeTruck */
  @Deprecated public long largeTruck;
  /** smallTruck */
  @Deprecated public long smallTruck;
  /** bus */
  @Deprecated public long bus;
  /** taxi */
  @Deprecated public long taxi;
  /** privateCar */
  @Deprecated public long privateCar;
  /** route37 */
  @Deprecated public long route37;
  /** route43 */
  @Deprecated public long route43;
  /** route82 */
  @Deprecated public long route82;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TrafficStatistic() {}

  /**
   * All-args constructor.
   * @param allTraffic allTraffic
   * @param adr adr
   * @param notAdr notAdr
   * @param largeTruck largeTruck
   * @param smallTruck smallTruck
   * @param bus bus
   * @param taxi taxi
   * @param privateCar privateCar
   * @param route37 route37
   * @param route43 route43
   * @param route82 route82
   */
  public TrafficStatistic(java.lang.Long allTraffic, java.lang.Long adr, java.lang.Long notAdr, java.lang.Long largeTruck, java.lang.Long smallTruck, java.lang.Long bus, java.lang.Long taxi, java.lang.Long privateCar, java.lang.Long route37, java.lang.Long route43, java.lang.Long route82) {
    this.allTraffic = allTraffic;
    this.adr = adr;
    this.notAdr = notAdr;
    this.largeTruck = largeTruck;
    this.smallTruck = smallTruck;
    this.bus = bus;
    this.taxi = taxi;
    this.privateCar = privateCar;
    this.route37 = route37;
    this.route43 = route43;
    this.route82 = route82;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return allTraffic;
    case 1: return adr;
    case 2: return notAdr;
    case 3: return largeTruck;
    case 4: return smallTruck;
    case 5: return bus;
    case 6: return taxi;
    case 7: return privateCar;
    case 8: return route37;
    case 9: return route43;
    case 10: return route82;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: allTraffic = (java.lang.Long)value$; break;
    case 1: adr = (java.lang.Long)value$; break;
    case 2: notAdr = (java.lang.Long)value$; break;
    case 3: largeTruck = (java.lang.Long)value$; break;
    case 4: smallTruck = (java.lang.Long)value$; break;
    case 5: bus = (java.lang.Long)value$; break;
    case 6: taxi = (java.lang.Long)value$; break;
    case 7: privateCar = (java.lang.Long)value$; break;
    case 8: route37 = (java.lang.Long)value$; break;
    case 9: route43 = (java.lang.Long)value$; break;
    case 10: route82 = (java.lang.Long)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'allTraffic' field.
   * @return allTraffic
   */
  public long getAllTraffic() {
    return allTraffic;
  }


  /**
   * Sets the value of the 'allTraffic' field.
   * allTraffic
   * @param value the value to set.
   */
  public void setAllTraffic(long value) {
    this.allTraffic = value;
  }

  /**
   * Gets the value of the 'adr' field.
   * @return adr
   */
  public long getAdr() {
    return adr;
  }


  /**
   * Sets the value of the 'adr' field.
   * adr
   * @param value the value to set.
   */
  public void setAdr(long value) {
    this.adr = value;
  }

  /**
   * Gets the value of the 'notAdr' field.
   * @return notAdr
   */
  public long getNotAdr() {
    return notAdr;
  }


  /**
   * Sets the value of the 'notAdr' field.
   * notAdr
   * @param value the value to set.
   */
  public void setNotAdr(long value) {
    this.notAdr = value;
  }

  /**
   * Gets the value of the 'largeTruck' field.
   * @return largeTruck
   */
  public long getLargeTruck() {
    return largeTruck;
  }


  /**
   * Sets the value of the 'largeTruck' field.
   * largeTruck
   * @param value the value to set.
   */
  public void setLargeTruck(long value) {
    this.largeTruck = value;
  }

  /**
   * Gets the value of the 'smallTruck' field.
   * @return smallTruck
   */
  public long getSmallTruck() {
    return smallTruck;
  }


  /**
   * Sets the value of the 'smallTruck' field.
   * smallTruck
   * @param value the value to set.
   */
  public void setSmallTruck(long value) {
    this.smallTruck = value;
  }

  /**
   * Gets the value of the 'bus' field.
   * @return bus
   */
  public long getBus() {
    return bus;
  }


  /**
   * Sets the value of the 'bus' field.
   * bus
   * @param value the value to set.
   */
  public void setBus(long value) {
    this.bus = value;
  }

  /**
   * Gets the value of the 'taxi' field.
   * @return taxi
   */
  public long getTaxi() {
    return taxi;
  }


  /**
   * Sets the value of the 'taxi' field.
   * taxi
   * @param value the value to set.
   */
  public void setTaxi(long value) {
    this.taxi = value;
  }

  /**
   * Gets the value of the 'privateCar' field.
   * @return privateCar
   */
  public long getPrivateCar() {
    return privateCar;
  }


  /**
   * Sets the value of the 'privateCar' field.
   * privateCar
   * @param value the value to set.
   */
  public void setPrivateCar(long value) {
    this.privateCar = value;
  }

  /**
   * Gets the value of the 'route37' field.
   * @return route37
   */
  public long getRoute37() {
    return route37;
  }


  /**
   * Sets the value of the 'route37' field.
   * route37
   * @param value the value to set.
   */
  public void setRoute37(long value) {
    this.route37 = value;
  }

  /**
   * Gets the value of the 'route43' field.
   * @return route43
   */
  public long getRoute43() {
    return route43;
  }


  /**
   * Sets the value of the 'route43' field.
   * route43
   * @param value the value to set.
   */
  public void setRoute43(long value) {
    this.route43 = value;
  }

  /**
   * Gets the value of the 'route82' field.
   * @return route82
   */
  public long getRoute82() {
    return route82;
  }


  /**
   * Sets the value of the 'route82' field.
   * route82
   * @param value the value to set.
   */
  public void setRoute82(long value) {
    this.route82 = value;
  }

  /**
   * Creates a new TrafficStatistic RecordBuilder.
   * @return A new TrafficStatistic RecordBuilder
   */
  public static com.java.avro.TrafficStatistic.Builder newBuilder() {
    return new com.java.avro.TrafficStatistic.Builder();
  }

  /**
   * Creates a new TrafficStatistic RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TrafficStatistic RecordBuilder
   */
  public static com.java.avro.TrafficStatistic.Builder newBuilder(com.java.avro.TrafficStatistic.Builder other) {
    if (other == null) {
      return new com.java.avro.TrafficStatistic.Builder();
    } else {
      return new com.java.avro.TrafficStatistic.Builder(other);
    }
  }

  /**
   * Creates a new TrafficStatistic RecordBuilder by copying an existing TrafficStatistic instance.
   * @param other The existing instance to copy.
   * @return A new TrafficStatistic RecordBuilder
   */
  public static com.java.avro.TrafficStatistic.Builder newBuilder(com.java.avro.TrafficStatistic other) {
    if (other == null) {
      return new com.java.avro.TrafficStatistic.Builder();
    } else {
      return new com.java.avro.TrafficStatistic.Builder(other);
    }
  }

  /**
   * RecordBuilder for TrafficStatistic instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TrafficStatistic>
    implements org.apache.avro.data.RecordBuilder<TrafficStatistic> {

    /** allTraffic */
    private long allTraffic;
    /** adr */
    private long adr;
    /** notAdr */
    private long notAdr;
    /** largeTruck */
    private long largeTruck;
    /** smallTruck */
    private long smallTruck;
    /** bus */
    private long bus;
    /** taxi */
    private long taxi;
    /** privateCar */
    private long privateCar;
    /** route37 */
    private long route37;
    /** route43 */
    private long route43;
    /** route82 */
    private long route82;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.java.avro.TrafficStatistic.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.allTraffic)) {
        this.allTraffic = data().deepCopy(fields()[0].schema(), other.allTraffic);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.adr)) {
        this.adr = data().deepCopy(fields()[1].schema(), other.adr);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.notAdr)) {
        this.notAdr = data().deepCopy(fields()[2].schema(), other.notAdr);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.largeTruck)) {
        this.largeTruck = data().deepCopy(fields()[3].schema(), other.largeTruck);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.smallTruck)) {
        this.smallTruck = data().deepCopy(fields()[4].schema(), other.smallTruck);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.bus)) {
        this.bus = data().deepCopy(fields()[5].schema(), other.bus);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.taxi)) {
        this.taxi = data().deepCopy(fields()[6].schema(), other.taxi);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.privateCar)) {
        this.privateCar = data().deepCopy(fields()[7].schema(), other.privateCar);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.route37)) {
        this.route37 = data().deepCopy(fields()[8].schema(), other.route37);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.route43)) {
        this.route43 = data().deepCopy(fields()[9].schema(), other.route43);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.route82)) {
        this.route82 = data().deepCopy(fields()[10].schema(), other.route82);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
    }

    /**
     * Creates a Builder by copying an existing TrafficStatistic instance
     * @param other The existing instance to copy.
     */
    private Builder(com.java.avro.TrafficStatistic other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.allTraffic)) {
        this.allTraffic = data().deepCopy(fields()[0].schema(), other.allTraffic);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.adr)) {
        this.adr = data().deepCopy(fields()[1].schema(), other.adr);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.notAdr)) {
        this.notAdr = data().deepCopy(fields()[2].schema(), other.notAdr);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.largeTruck)) {
        this.largeTruck = data().deepCopy(fields()[3].schema(), other.largeTruck);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.smallTruck)) {
        this.smallTruck = data().deepCopy(fields()[4].schema(), other.smallTruck);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bus)) {
        this.bus = data().deepCopy(fields()[5].schema(), other.bus);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.taxi)) {
        this.taxi = data().deepCopy(fields()[6].schema(), other.taxi);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.privateCar)) {
        this.privateCar = data().deepCopy(fields()[7].schema(), other.privateCar);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.route37)) {
        this.route37 = data().deepCopy(fields()[8].schema(), other.route37);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.route43)) {
        this.route43 = data().deepCopy(fields()[9].schema(), other.route43);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.route82)) {
        this.route82 = data().deepCopy(fields()[10].schema(), other.route82);
        fieldSetFlags()[10] = true;
      }
    }

    /**
      * Gets the value of the 'allTraffic' field.
      * allTraffic
      * @return The value.
      */
    public long getAllTraffic() {
      return allTraffic;
    }


    /**
      * Sets the value of the 'allTraffic' field.
      * allTraffic
      * @param value The value of 'allTraffic'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setAllTraffic(long value) {
      validate(fields()[0], value);
      this.allTraffic = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'allTraffic' field has been set.
      * allTraffic
      * @return True if the 'allTraffic' field has been set, false otherwise.
      */
    public boolean hasAllTraffic() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'allTraffic' field.
      * allTraffic
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearAllTraffic() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'adr' field.
      * adr
      * @return The value.
      */
    public long getAdr() {
      return adr;
    }


    /**
      * Sets the value of the 'adr' field.
      * adr
      * @param value The value of 'adr'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setAdr(long value) {
      validate(fields()[1], value);
      this.adr = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'adr' field has been set.
      * adr
      * @return True if the 'adr' field has been set, false otherwise.
      */
    public boolean hasAdr() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'adr' field.
      * adr
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearAdr() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'notAdr' field.
      * notAdr
      * @return The value.
      */
    public long getNotAdr() {
      return notAdr;
    }


    /**
      * Sets the value of the 'notAdr' field.
      * notAdr
      * @param value The value of 'notAdr'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setNotAdr(long value) {
      validate(fields()[2], value);
      this.notAdr = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'notAdr' field has been set.
      * notAdr
      * @return True if the 'notAdr' field has been set, false otherwise.
      */
    public boolean hasNotAdr() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'notAdr' field.
      * notAdr
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearNotAdr() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'largeTruck' field.
      * largeTruck
      * @return The value.
      */
    public long getLargeTruck() {
      return largeTruck;
    }


    /**
      * Sets the value of the 'largeTruck' field.
      * largeTruck
      * @param value The value of 'largeTruck'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setLargeTruck(long value) {
      validate(fields()[3], value);
      this.largeTruck = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'largeTruck' field has been set.
      * largeTruck
      * @return True if the 'largeTruck' field has been set, false otherwise.
      */
    public boolean hasLargeTruck() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'largeTruck' field.
      * largeTruck
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearLargeTruck() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'smallTruck' field.
      * smallTruck
      * @return The value.
      */
    public long getSmallTruck() {
      return smallTruck;
    }


    /**
      * Sets the value of the 'smallTruck' field.
      * smallTruck
      * @param value The value of 'smallTruck'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setSmallTruck(long value) {
      validate(fields()[4], value);
      this.smallTruck = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'smallTruck' field has been set.
      * smallTruck
      * @return True if the 'smallTruck' field has been set, false otherwise.
      */
    public boolean hasSmallTruck() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'smallTruck' field.
      * smallTruck
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearSmallTruck() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bus' field.
      * bus
      * @return The value.
      */
    public long getBus() {
      return bus;
    }


    /**
      * Sets the value of the 'bus' field.
      * bus
      * @param value The value of 'bus'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setBus(long value) {
      validate(fields()[5], value);
      this.bus = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bus' field has been set.
      * bus
      * @return True if the 'bus' field has been set, false otherwise.
      */
    public boolean hasBus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bus' field.
      * bus
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearBus() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxi' field.
      * taxi
      * @return The value.
      */
    public long getTaxi() {
      return taxi;
    }


    /**
      * Sets the value of the 'taxi' field.
      * taxi
      * @param value The value of 'taxi'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setTaxi(long value) {
      validate(fields()[6], value);
      this.taxi = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'taxi' field has been set.
      * taxi
      * @return True if the 'taxi' field has been set, false otherwise.
      */
    public boolean hasTaxi() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'taxi' field.
      * taxi
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearTaxi() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'privateCar' field.
      * privateCar
      * @return The value.
      */
    public long getPrivateCar() {
      return privateCar;
    }


    /**
      * Sets the value of the 'privateCar' field.
      * privateCar
      * @param value The value of 'privateCar'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setPrivateCar(long value) {
      validate(fields()[7], value);
      this.privateCar = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'privateCar' field has been set.
      * privateCar
      * @return True if the 'privateCar' field has been set, false otherwise.
      */
    public boolean hasPrivateCar() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'privateCar' field.
      * privateCar
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearPrivateCar() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'route37' field.
      * route37
      * @return The value.
      */
    public long getRoute37() {
      return route37;
    }


    /**
      * Sets the value of the 'route37' field.
      * route37
      * @param value The value of 'route37'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setRoute37(long value) {
      validate(fields()[8], value);
      this.route37 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'route37' field has been set.
      * route37
      * @return True if the 'route37' field has been set, false otherwise.
      */
    public boolean hasRoute37() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'route37' field.
      * route37
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearRoute37() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'route43' field.
      * route43
      * @return The value.
      */
    public long getRoute43() {
      return route43;
    }


    /**
      * Sets the value of the 'route43' field.
      * route43
      * @param value The value of 'route43'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setRoute43(long value) {
      validate(fields()[9], value);
      this.route43 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'route43' field has been set.
      * route43
      * @return True if the 'route43' field has been set, false otherwise.
      */
    public boolean hasRoute43() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'route43' field.
      * route43
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearRoute43() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'route82' field.
      * route82
      * @return The value.
      */
    public long getRoute82() {
      return route82;
    }


    /**
      * Sets the value of the 'route82' field.
      * route82
      * @param value The value of 'route82'.
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder setRoute82(long value) {
      validate(fields()[10], value);
      this.route82 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'route82' field has been set.
      * route82
      * @return True if the 'route82' field has been set, false otherwise.
      */
    public boolean hasRoute82() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'route82' field.
      * route82
      * @return This builder.
      */
    public com.java.avro.TrafficStatistic.Builder clearRoute82() {
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TrafficStatistic build() {
      try {
        TrafficStatistic record = new TrafficStatistic();
        record.allTraffic = fieldSetFlags()[0] ? this.allTraffic : (java.lang.Long) defaultValue(fields()[0]);
        record.adr = fieldSetFlags()[1] ? this.adr : (java.lang.Long) defaultValue(fields()[1]);
        record.notAdr = fieldSetFlags()[2] ? this.notAdr : (java.lang.Long) defaultValue(fields()[2]);
        record.largeTruck = fieldSetFlags()[3] ? this.largeTruck : (java.lang.Long) defaultValue(fields()[3]);
        record.smallTruck = fieldSetFlags()[4] ? this.smallTruck : (java.lang.Long) defaultValue(fields()[4]);
        record.bus = fieldSetFlags()[5] ? this.bus : (java.lang.Long) defaultValue(fields()[5]);
        record.taxi = fieldSetFlags()[6] ? this.taxi : (java.lang.Long) defaultValue(fields()[6]);
        record.privateCar = fieldSetFlags()[7] ? this.privateCar : (java.lang.Long) defaultValue(fields()[7]);
        record.route37 = fieldSetFlags()[8] ? this.route37 : (java.lang.Long) defaultValue(fields()[8]);
        record.route43 = fieldSetFlags()[9] ? this.route43 : (java.lang.Long) defaultValue(fields()[9]);
        record.route82 = fieldSetFlags()[10] ? this.route82 : (java.lang.Long) defaultValue(fields()[10]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TrafficStatistic>
    WRITER$ = (org.apache.avro.io.DatumWriter<TrafficStatistic>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TrafficStatistic>
    READER$ = (org.apache.avro.io.DatumReader<TrafficStatistic>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.allTraffic);

    out.writeLong(this.adr);

    out.writeLong(this.notAdr);

    out.writeLong(this.largeTruck);

    out.writeLong(this.smallTruck);

    out.writeLong(this.bus);

    out.writeLong(this.taxi);

    out.writeLong(this.privateCar);

    out.writeLong(this.route37);

    out.writeLong(this.route43);

    out.writeLong(this.route82);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.allTraffic = in.readLong();

      this.adr = in.readLong();

      this.notAdr = in.readLong();

      this.largeTruck = in.readLong();

      this.smallTruck = in.readLong();

      this.bus = in.readLong();

      this.taxi = in.readLong();

      this.privateCar = in.readLong();

      this.route37 = in.readLong();

      this.route43 = in.readLong();

      this.route82 = in.readLong();

    } else {
      for (int i = 0; i < 11; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.allTraffic = in.readLong();
          break;

        case 1:
          this.adr = in.readLong();
          break;

        case 2:
          this.notAdr = in.readLong();
          break;

        case 3:
          this.largeTruck = in.readLong();
          break;

        case 4:
          this.smallTruck = in.readLong();
          break;

        case 5:
          this.bus = in.readLong();
          break;

        case 6:
          this.taxi = in.readLong();
          break;

        case 7:
          this.privateCar = in.readLong();
          break;

        case 8:
          this.route37 = in.readLong();
          break;

        case 9:
          this.route43 = in.readLong();
          break;

        case 10:
          this.route82 = in.readLong();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










